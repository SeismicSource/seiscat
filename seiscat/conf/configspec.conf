# Configuration file for seiscat


## SQLite database
## Event information is stored in a SQLite database, in a table named "events".
## The following fields will be created:
## - evid: event ID
## - time: event origin time (UTC date time)
## - lat: event latitude (decimal degrees)
## - lon: event longitude (decimal degrees)
## - depth: event depth (km, positive down)
## - mag: event magnitude (magnitude units)
## - mag_type: event magnitude type
# Database file name
db_file = string(default=seiscat.sqlite)
# List of extra fields to add to the database (not used by seiscat)
# ex.: extra_field_names = field1, field2, field3
extra_field_names = force_list(default=None)
# List of extra fields types (SQLite types)
# ex.: extra_field_types = TEXT, REAL, BOOLEAN
extra_field_types = force_list(default=None)
# List of extra fields default values (or None)
# ex.: extra_field_defaults = "", 0.0, False
extra_field_defaults = force_list(default=None)


## FDSN event webservice URL or shortcut
# It can be an ObsPy supported shortcut (ex., ISC, USGS, RESIF)
# or a full URL (ex., http://www.isc.ac.uk/fdsnws/event/1/)
fdsn_event_url = string(default=ISC)


## Event selection criteria
## Use "None" to signify no limit
# Start time for event selection (UTC date time or None)
#  ex.: start_time = 2021-08-23T00:00:00
start_time = string(default=None)
# End time for event selection (UTC date time or None)
#  ex.: end_time = 2021-08-24T00:00:00
end_time = string(default=None)
# Recheck period (string or None).
# Use a string with the format "X unit" where X is an integer and unit is
# one of the following: "days", "hours", "minutes", "seconds" (case insensitive
# and plural or singular).
#  ex.: recheck_period = 1 day
#  ex.: recheck_period = 10 hours
# This option is only used if end_time is None. Every time the program is run,
# it will check if new events have been added or if existing events have been
# updated during the recheck_period.
recheck_period = string(default=None)
# Geographic box selection (decimal degrees or None)
lat_min = float(min=-90, max=90, default=None)
lat_max = float(min=-90, max=90, default=None)
lon_min = float(min=-180, max=360, default=None)
lon_max = float(min=-180, max=360, default=None)
# Geographic circular selection.
# Note, this will override the box selection if both are specified
# Center of circular selection (decimal degrees or None)
lat0 = float(min=-90, max=90, default=None)
lon0 = float(min=-180, max=360, default=None)
# Miminum and maximum radius of circular selection (decimal degrees or None)
radius_min = float(min=0, default=None)
radius_max = float(min=0, default=None)
# Depth selection (km, positive down, or None)
depth_min = float(default=None)
depth_max = float(default=None)
# Magnitude selection (magnitude units or None)
mag_min = float(default=None)
mag_max = float(default=None)
# List of event types (or None)
# ex.: event_type = earthquake
event_type = force_list(default=None)
# List of event types to exclude (or None)
# ex.: event_type_exclude = quarry blast
event_type_exclude = force_list(default=None)
## You can add as many additional criteria as you want by using a suffix
## (example "_1").
## Note that every omitted parameter will be considered as None (no limit).
## So, if you want for example the same time limits for the second set of
## criteria, you have to specify them again.
## Examples:
# start_time_1 = 2022-01-01T00:00:00
# end_time_1 = 2022-01-31T00:00:00
# recheck_period_1 = 12 hours
# lat_min_1 = 12.5
# lat_max_1 = 18.5
# lon_min_1 = -62.5
# lon_max_1 = -58.5
# depth_min_1 = None
# depth_max_1 = None
# mag_min_1 = None
# mag_max_1 = None